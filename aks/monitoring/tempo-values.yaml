# Grafana Tempo Configuration for Rocket.Chat Distributed Tracing
# Integrates with existing Prometheus and Grafana setup

# Tempo server configuration
tempo:
  # Use a stable version for production
  image:
    tag: "2.3.0"
  
  # Tempo configuration
  config:
    server:
      http_listen_port: 3200
      grpc_listen_port: 9095
    distributor:
      receivers:
        jaeger:
          protocols:
            thrift_http:
            grpc:
        zipkin:
        otlp:
          protocols:
            grpc:
            http:
        opencensus:
    ingester:
      max_block_duration: 5m
    metrics_generator:
      ring:
        kvstore:
          store: inmemory
      processor:
        service_graphs:
          enabled: true
          max_items: 10000
        span_metrics:
          enabled: true
          dimensions:
            - name: http.method
            - name: http.status_code
            - name: service.name
      storage:
        path: /var/tempo/generator/wal
        remote_write:
          - url: http://monitoring-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090/api/v1/write
    storage:
      trace:
        backend: local
        local:
          path: /var/tempo/traces
    overrides:
      defaults:
        max_traces_per_user: 10000
        max_bytes_per_trace: 5000000
        metrics_generator_processors:
          - service-graphs
          - span-metrics

# Resource limits optimized for AKS
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 256Mi

# Service configuration
service:
  type: ClusterIP
  port: 3200
  annotations: {}

# Node selector and tolerations for AKS
nodeSelector: {}
tolerations: []
affinity: {}

# Note: The Grafana Tempo Helm chart may not support persistence in the same way
# For now, we'll use emptyDir and add an initContainer to fix permissions
# If needed, we can switch to manual PVC deployment later

# Security context - disable runAsNonRoot to allow directory creation
securityContext:
  # Temporarily allow root to create directories
  runAsNonRoot: false
  runAsUser: 0
  fsGroup: 1000
