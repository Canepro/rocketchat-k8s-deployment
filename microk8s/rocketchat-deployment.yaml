apiVersion: v1
kind: Service
metadata:
  name: rocketchat
  namespace: rocketchat
spec:
  selector:
    app: rocketchat
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rocketchat
  namespace: rocketchat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rocketchat
  template:
    metadata:
      labels:
        app: rocketchat
    spec:
      containers:
      - name: rocketchat
        image: registry.rocket.chat/rocketchat/rocket.chat:7.9.3
        ports:
        - containerPort: 3000
        env:
        - name: ROOT_URL
          value: "https://chat.canepro.me"
        - name: MONGO_URL
          value: "mongodb://root:MongoRoot2024!@mongodb-0.mongodb-headless.rocketchat.svc.cluster.local:27017,mongodb-1.mongodb-headless.rocketchat.svc.cluster.local:27017,mongodb-2.mongodb-headless.rocketchat.svc.cluster.local:27017/rocketchat?replicaSet=rs0"
        - name: MONGO_OPLOG_URL
          value: "mongodb://root:MongoRoot2024!@mongodb-0.mongodb-headless.rocketchat.svc.cluster.local:27017,mongodb-1.mongodb-headless.rocketchat.svc.cluster.local:27017,mongodb-2.mongodb-headless.rocketchat.svc.cluster.local:27017/local?replicaSet=rs0"
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: rocketchat-uploads
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rocketchat-uploads
  namespace: rocketchat
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 30Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rocketchat-ingress
  namespace: rocketchat
  annotations:
    cert-manager.io/cluster-issuer: production-cert-issuer
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - chat.canepro.me
    secretName: rocketchat-tls
  rules:
  - host: chat.canepro.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rocketchat
            port:
              number: 3000
